/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coffee;

import Models.Invoice;
import Models.Sale;
import Services.OrderManager;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author barri
 */
public class history extends javax.swing.JFrame {
    ArrayList<Invoice> invoices  = OrderManager.getInvoiceAll();
    
    /**
     * Creates new form history
     */
    public history() {
        initComponents();
        DefaultTableModel tblModel = (DefaultTableModel) HistoryTbl.getModel();
        for(Invoice invoice : invoices) {
            int invoiceID = invoice.getInvoiceID();
            String invoiceDate = invoice.getInvoiceDate();
            int cashierID = invoice.getCashierID();
            double subTotal = invoice.getSubtotal();
            double totalAmount = invoice.getTotalAmount();
            
            Object[] addRow = {invoiceID, invoiceDate, cashierID, subTotal, totalAmount};
            
            tblModel.addRow(addRow);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        historyOfTransactionPanel = new javax.swing.JPanel();
        historyOfTransactionLbl = new javax.swing.JLabel();
        histroyTblPnl = new javax.swing.JScrollPane();
        HistoryTbl = new javax.swing.JTable();
        invoiceScrnPanel = new javax.swing.JScrollPane();
        invoiceTextArea = new javax.swing.JTextArea();
        btnDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        historyOfTransactionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        historyOfTransactionLbl.setBackground(new java.awt.Color(204, 0, 0));
        historyOfTransactionLbl.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        historyOfTransactionLbl.setText("History of Transaction");

        javax.swing.GroupLayout historyOfTransactionPanelLayout = new javax.swing.GroupLayout(historyOfTransactionPanel);
        historyOfTransactionPanel.setLayout(historyOfTransactionPanelLayout);
        historyOfTransactionPanelLayout.setHorizontalGroup(
            historyOfTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historyOfTransactionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(historyOfTransactionLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(349, 349, 349))
        );
        historyOfTransactionPanelLayout.setVerticalGroup(
            historyOfTransactionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, historyOfTransactionPanelLayout.createSequentialGroup()
                .addGap(0, 13, Short.MAX_VALUE)
                .addComponent(historyOfTransactionLbl))
        );

        HistoryTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "Cashier ID", "SubTotal", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        HistoryTbl.getTableHeader().setReorderingAllowed(false);
        HistoryTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HistoryTblMouseClicked(evt);
            }
        });
        histroyTblPnl.setViewportView(HistoryTbl);
        if (HistoryTbl.getColumnModel().getColumnCount() > 0) {
            HistoryTbl.getColumnModel().getColumn(0).setResizable(false);
            HistoryTbl.getColumnModel().getColumn(1).setResizable(false);
            HistoryTbl.getColumnModel().getColumn(1).setPreferredWidth(150);
            HistoryTbl.getColumnModel().getColumn(2).setResizable(false);
            HistoryTbl.getColumnModel().getColumn(3).setResizable(false);
            HistoryTbl.getColumnModel().getColumn(4).setResizable(false);
        }

        invoiceTextArea.setEditable(false);
        invoiceTextArea.setColumns(20);
        invoiceTextArea.setRows(5);
        invoiceScrnPanel.setViewportView(invoiceTextArea);

        btnDelete.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(historyOfTransactionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(histroyTblPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(invoiceScrnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(historyOfTransactionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(histroyTblPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(invoiceScrnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel) HistoryTbl.getModel();
        
        if(HistoryTbl.getSelectedRowCount() == 1) {
            int currentInvoiceID = Integer.parseInt(HistoryTbl.getValueAt(HistoryTbl.getSelectedRow(), 0).toString());
            tblModel.removeRow(HistoryTbl.getSelectedRow());
            OrderManager.deleteInvoice(currentInvoiceID);
            invoiceTextArea.setText("");
        } else {
            if(HistoryTbl.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "History of transaction is empty!");
            } else {
                JOptionPane.showMessageDialog(this, "Please select a transaction to be removed!");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    
    
    private void HistoryTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HistoryTblMouseClicked
        // TODO add your handling code here:       
        if(HistoryTbl.getSelectedRowCount() == 1) {
        int currentInvoiceID = Integer.parseInt(HistoryTbl.getValueAt(HistoryTbl.getSelectedRow(), 0).toString());

        ArrayList<Sale> sales = OrderManager.getSales(currentInvoiceID);
        Invoice invoice = OrderManager.getInvoiceByID(currentInvoiceID);
        double subTotal = invoice.getSubtotal();
        double tax = 0.12 * subTotal;
        double total = invoice.getTotalAmount();

        String textTitle = String.format("*********************************Taste The Coffee******************************\n"
                                           + "Time\\Date: %s\n"
                                           + "Invoice ID: %d\n"
                                           + "**********************************************************************************\n"
                                           + "Item Name:             \tQty\tPrice($)\tAmount\n"
                                           , invoice.getInvoiceDate(), invoice.getInvoiceID());

        String textItems = "";
        for(int i = 0; i < sales.size(); i++) {
            textItems += String.format("%d. %-20s\t%-3d\t%-8.2f\t%-6.2f\n"
                                      , i+1
                                      , sales.get(i).getProductName()
                                      , sales.get(i).getQuantity()
                                      , sales.get(i).getUnitPrice()
                                      , sales.get(i).getAmount());
        } 

        String textTotal = String.format("**********************************************************************************\n"
                                       + "Tax: %.2f\n"
                                       + "Sub Total: %.2f\n"
                                       + "Total: %.2f\n"
                                       + "**********************************************************************************\n"
                                       , tax, subTotal, total);
        
        invoiceTextArea.setText(textTitle + textItems + textTotal);
        } else {
            if(HistoryTbl.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "History of transaction is empty!");
            } else {
                JOptionPane.showMessageDialog(this, "Please select a transaction to be removed!");
            }
        }
    }//GEN-LAST:event_HistoryTblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(history.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new history().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HistoryTbl;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel historyOfTransactionLbl;
    private javax.swing.JPanel historyOfTransactionPanel;
    private javax.swing.JScrollPane histroyTblPnl;
    private javax.swing.JScrollPane invoiceScrnPanel;
    private javax.swing.JTextArea invoiceTextArea;
    // End of variables declaration//GEN-END:variables
}
